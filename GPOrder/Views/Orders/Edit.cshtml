@using GPOrder.Helpers
@using Microsoft.AspNet.Identity

@model GPOrder.Models.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    // on est dans la vue LimitDate est censé être dans le Tz user
    var isTooLate = Model.GroupedOrder?.LimitDate != null
        && DateTime.UtcNow.ConvertTimeFromUtc(User) > Model.GroupedOrder.LimitDate.Value;
}

<h2>Edit</h2>
@if (isTooLate)
{
    <h3 class="text-danger">Warning, the limit date time of this order is passed. You're modifications may won't be taken by the delivery boy.</h3>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(m => m.CreateUser.Id)
    @Html.HiddenFor(m => m.GroupedOrder.Id)
    @Html.HiddenFor(m => m.GroupedOrder.LinkedShop.Id)
    @Html.HiddenFor(m => m.GroupedOrder.LinkedShop.Name)
    @Html.HiddenFor(m => m.GroupedOrder.LinkedShop.Adress)

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.CreationDate)
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.JQueryUI().DatepickerFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstimatedPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstimatedPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimatedPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderLines, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OrderLines, "OrderLines")
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<p>
    @Html.ActionLink("Back to List", "Details", "GroupedOrders", new { Model.GroupedOrder.Id }, null)
    @(" | ")
    @Html.ActionLink("Details", "Details", "Orders", new { Model.Id }, null)
    @if (Model.CreateUser.Id == User.Identity.GetUserId())
    {
        @(" | ")
        @Html.ActionLink("Delete", "Delete", "Orders", new { Model.Id }, null)
    }
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryajax")
    @Scripts.Render("~/bundles/jqueryui")

    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/themes/base/css")

    <script type="text/javascript" src="~/Scripts/Order.js"></script>

    <script type="text/javascript">
        var _order = new Order({ "IsOnCreation": false });
        $(document).ready(function () {
            _order.ReadyJS();
        });
    </script>
}
