@using System.Globalization
@using System.Security.Claims
@using GPOrder.Helpers
@using ILN.MVC.Datetimepicker
@model GPOrder.Models.GroupedOrder

@{
    ViewBag.Title = "BecomingDeliveryBoy";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>BecomingDeliveryBoy</h2>

@using (Html.BeginForm("BecomingDeliveryBoy", "DeliveryBoy"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>GroupedOrder</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CreateUser.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CreateUser.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateUser.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkedShop.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.LinkedShop.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkedShop.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LimitDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @{
                    var userCulture = ((ClaimsIdentity)User.Identity).GetUiCulture();
                    var cultureInfo = new CultureInfo(userCulture);
                    var pattern = string.Format("{0} {1}", cultureInfo.DateTimeFormat.ShortDatePattern, cultureInfo.DateTimeFormat.ShortTimePattern);
                    var format = MomentJsHelpers.GenerateMomentJSFormatString(pattern, fTolerant: true, fCulture: cultureInfo);
                }
                @Html.DateTimeFor(model => model.LimitDate, new DatetimepickerOptions { locale = userCulture.Substring(0, 2), format = format })
                @Html.ValidationMessageFor(model => model.LimitDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Valid" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "GroupedOrders")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/iln_datetimepicker")
    @Styles.Render("~/bundles/iln_datetimepicker_css")
}