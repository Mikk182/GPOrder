@using GPOrder.Models
@using Microsoft.AspNet.Identity
@model GroupedOrder
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Details</h2>
<div>
    <h4>GroupedOrder</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreationDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreateUser)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreateUser.UserName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.LinkedShop)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LinkedShop.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.DeliveryBoy)
        </dt>
        <dd>
            @{
                var currentUserId = User.Identity.GetUserId();
            }
            @if (Model.DeliveryBoy != null)
            {
                <p>@Html.DisplayFor(model => model.DeliveryBoy.UserName)</p>
                if (Model.DeliveryBoy_Id == currentUserId)
                {
                    <p>@Html.ActionLink("Leave", "LeaveDeliveryBoy", "DeliveryBoy", new { Model.Id }, null)</p>
                }
                else
                {
                    if (Model.Orders.Any(o => o.CreateUser_Id == currentUserId) &&
                        !Model.GroupedOrderEvents.Any(goe =>
                            goe.CreateUserId == currentUserId &&
                            goe.EventStatus == GroupedOrderEventStatus.Submitted))
                    {
                        <p>
                            @Html.ActionLink("Se proposer", "AskForDeliveryBoy", "DeliveryBoy", new { id = Model.Id }, null)
                            @(string.Format(" à la place de {0}", Model.DeliveryBoy.UserName))
                        </p>
                    }
                }
            }
            else
            {
                <p>@("This order hasn't any delivery boy. ")</p>
                if (Model.Orders.Any(o => o.CreateUser_Id == currentUserId))
                {
                    <p>@Html.ActionLink("Je suis partant", "AskForDeliveryBoy", "DeliveryBoy", new { id = Model.Id }, null)</p>
                }
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.LimitDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LimitDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Orders)
        </dt>
        @Html.DisplayFor(model => model.Orders, "Orders")
        <dt>
            @Html.DisplayNameFor(model => model.GroupedOrderEvents)
        </dt>
        <dd>
            @{ Html.RenderAction("GetGroupedOrderEvents", "GroupedOrders", new { groupedOrderId = Model.Id });}
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Back to List", "Index")
    @if (Model.Orders.All(o => o.CreateUser_Id != User.Identity.GetUserId()))
    {
        @Html.ActionLink("Join", "Create", "Orders", new { shopId = Model.LinkedShop.Id, groupedOrderId = Model.Id }, null)
    }
    @if (Model.LinkedBill != null)
    {
        if (Model.DeliveryBoy_Id == currentUserId)
        {
            @Html.ActionLink("Bill", "Edit", "Bills", new { Id = Model.LinkedBill_Id }, null)
        }
        else
        {
            @Html.ActionLink("Bill", "Details", "Bills", new { Id = Model.LinkedBill_Id }, null)
        }
    }
    else
    {
        if (Model.DeliveryBoy_Id == currentUserId)
        {
            @Html.ActionLink("Bill", "Create", "Bills", new { groupedOrderId = Model.Id }, null)
        }
    }
</p>
